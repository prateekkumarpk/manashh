<html>
<title>dinka chika</title>
<body>
<h1>1.Quadratic formula</h1>
<text>import java.util.Scanner;
public class QuadraticEquationExample1
{
public static void main(String[] Strings)
{
Scanner input = new Scanner(System.in);
System.out.print("Enter the value of a: ");
double a = input.nextDouble();
System.out.print("Enter the value of b: ");
double b = input.nextDouble();
System.out.print("Enter the value of c: ");
double c = input.nextDouble();
double d= b * b - 4.0 * a * c;
if (d> 0.0)
{
double r1 = (-b + Math.pow(d, 0.5)) / (2.0 * a);
double r2 = (-b - Math.pow(d, 0.5)) / (2.0 * a);
System.out.println("The roots are " + r1 + " and " + r2);
}
else if (d == 0.0)
{
double r1 = -b / (2.0 * a);
System.out.println("The root is " + r1);
}
else
{
System.out.println("Roots are not real.");
}
}
}
<br>
</text>

<h1>2a.Linear search</h1>
<text>class LinearSearch {
// This function returns index of element x in arr[]
static int search(int arr[], int n, int x)
{
for (int i = 0; i < n; i++) {
// Return the index of the element if the element
// is found
if (arr[i] == x)
return i;
}
5
// return -1 if the element is not found
return -1;
}
public static void main(String[] args)
{
int[] arr = { 3, 4, 1, 7, 5 };
int n = arr.length;
int x = 4;
int index = search(arr, n, x);
if (index == -1)
System.out.println("Element is not present in the array");
else
System.out.println("Element found at position " + index);
}
}
<br>
</text>

<h1>2b.Bubble</h1>
<text>class BubbleSort {
void bubbleSort(int arr[])
{
int n = arr.length;
for (int i = 0; i < n - 1; i++)
for (int j = 0; j < n - i - 1; j++)
if (arr[j] > arr[j + 1]) {
// swap arr[j+1] and arr[j]
int temp = arr[j];
arr[j] = arr[j + 1];
arr[j + 1] = temp;
}
}
/* Prints the array */
void printArray(int arr[])
{
int n = arr.length;
for (int i = 0; i < n; ++i)
System.out.print(arr[i] + " ");
System.out.println();
}
// Driver method to test above
public static void main(String args[])
{
BubbleSort ob = new BubbleSort();
int arr[] = { 64, 34, 25, 12, 22, 11, 90,12 };
ob.bubbleSort(arr);
System.out.println("Sorted array");
ob.printArray(arr);
}
}
<br>
</text>

<h1>3.Student</h1>
<text>import java.io.*;
class Student
{
String usn, name, programme;
long ph;
Student()
{
usn = name = programme = "No value";
ph = 0;
}
void read_data(String u, String n, String p, long m)
{
usn = u;
name = n;
programme = p;
ph =m;
}void display()
{
System.out.println(usn + "\t" + name + "\t" + programme + "\t\t" + ph);
}
}
class Record
{
public static void main(String args[]) throws Exception
{
String u, n, p;
10
long m;
int no;
BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
System.out.print("Enter number of records:");
no = Integer.parseInt(br.readLine());
Student[] s = new Student[no];
for(int i=0; i<s.length;i++)
{
System.out.println("\nEnter Student " + (i + 1) + " record");
s[i] = new Student();
System.out.print("Enter student USN: ");
u = br.readLine();
System.out.print("Enter student Name: ");
n = br.readLine();
System.out.print("Enter student Programme: ");
p = br.readLine();
System.out.print("Enter student Phone number: ");
m = Long.parseLong(br.readLine());
s[i].read_data(u, n, p, m);
}
System.out.println("USN \t NAME \t PROGRAMME \t PHONE NO");
for(int i=0; i<s.length;i++)
{
s[i].display();
}
}}
<br>
</text>

<h1>4a.Prime number</h1>
<text>public class PrimeExample{
public static void main(String args[]){
 int i,m=0,flag=0;
 int n=3;//it is the number to be checked
 m=n/2;
 if(n==0||n==1){
 System.out.println(n+" is not prime number");
 }else{
 for(i=2;i<=m;i++){
 if(n%i==0){
 System.out.println(n+" is not prime number");
 flag=1;
 break;
 }
 }
 if(flag==0) { System.out.println(n+" is prime number"); }
 }//end of else
}
}
<br>
</text>

<h1>4b.Arithmetic op</h1>
<text>import java.util.Scanner;
class Main {
 public static void main(String[] args) {
 char operator;
 Double number1, number2, result;
 // create an object of Scanner class
 Scanner input = new Scanner(System.in);
 // ask users to enter operator
 System.out.println("Choose an operator: +, -, *, or /");
 operator = input.next().charAt(0);
 // ask users to enter numbers
 System.out.println("Enter first number");
 number1 = input.nextDouble();
 System.out.println("Enter second number");
 number2 = input.nextDouble();
 switch (operator) {
 // performs addition between numbers
 case '+':
 result = number1 + number2;
 System.out.println(number1 + " + " + number2 + " = " + result);
 break;
 // performs subtraction between numbers
 case '-':
 result = number1 - number2;
 System.out.println(number1 + " - " + number2 + " = " + result);
 break;
 // performs multiplication between numbers
 case '*':
 result = number1 * number2;
 System.out.println(number1 + " * " + number2 + " = " + result);
 break;
 // performs division between numbers
 case '/':
 result = number1 / number2;
 System.out.println(number1 + " / " + number2 + " = " + result);
 break;
 default:
 System.out.println("Invalid operator!");
 break;
 }
 input.close();
 }
}
<br>
</text>

<h1>5.Inheritance Calculator</h1>
<text>interface Add_Sub {
public void add(double x, double y);
public void subtract(double x, double y);
}
interface Mul_Div {
public void multiply(double x, double y);
public void divide(double x, double y);
}
interface Calculator extends Add_Sub, Mul_Div {
public void printResult(double result);
}
public class MyCalculator implements Calculator {
public void add(double x, double y)
{
double result = x + y;
printResult(result);
}
public void subtract(double x, double y)
{
double result = x - y;
printResult(result);
}
public void multiply(double x, double y)
{
double result = x * y;
printResult(result);
}
public void divide(double x, double y)
{
double result = x / y;
printResult(result);
}
public void printResult(double result)
{
System.out.println(
"The result is : " + result);
}
public static void main(String args[])
{
MyCalculator c = new MyCalculator();
c.add(5, 10);
c.subtract(35, 15);
c.multiply(6, 9);
c.divide(45, 6);
}
}
<br>
</text>

<h1>6.Constructor Overloading</h1>
<text> class Box
{
double width, height, depth;
Box(double w, double h, double d) {
width = w; height = h; depth = d;
}
Box()
{
width = height = depth = 0; }
Box(double len)
{
width = height = depth = len; }
volume()
{
return width * height * depth; }
}
public class Test {
public static void main(String args[]) {
Box mybox1 = new Box(10, 20, 15); Box mybox2 = new Box();
Box mycube = new Box(7);
double vol;
vol = mybox1.volume();
System.out.println(" Volume of mybox1 is " + vol);
System.out.println(" Volume of mybox2 is " + vol);
vol = mycube.volume();
System.out.println(" Volume of mycube is " + vol);
<br>
</text>

<h1>7a.currency</h1>
<text>
package currencyconversion;
import java.util.*;
public class currency
{
double inr,usd;
double euro,yen;
Scanner in=new Scanner(System.in);
public void dollartorupee()
{
System.out.println("Enter dollars to convert into Rupees:");
usd=in.nextInt();
inr=usd*67;
System.out.println("Dollar ="+usd+"equal to INR="+inr);
}
public void rupeetodollar()
{
System.out.println("Enter Rupee to convert into Dollars:");
inr=in.nextInt();
usd=inr/67;
System.out.println("Rupee ="+inr+"equal to Dollars="+usd);
}
public void eurotorupee()
{
System.out.println("Enter euro to convert into Rupees:");
euro=in.nextInt();
inr=euro*79.50;
System.out.println("Euro ="+euro +"equal to INR="+inr);
}
public void rupeetoeuro()
{
System.out.println("Enter Rupees to convert into Euro:");
inr=in.nextInt();
euro=(inr/79.50);
System.out.println("Rupee ="+inr +"equal to Euro="+euro);
}
public void yentorupee()
{
System.out.println("Enter yen to convert into Rupees:");
yen=in.nextInt();
inr=yen*0.61;
System.out.println("YEN="+yen +"equal to INR="+inr);
}
public void rupeetoyen()
{
System.out.println("Enter Rupees to convert into Yen:");
inr=in.nextInt();
yen=(inr/0.61);
System.out.println("INR="+inr +"equal to YEN"+yen);
}
}
<br>
</text>

<h1>7b.Converter</h1>
<text>import java.util.*;
import java.io.*;
import currencyconversion.currency;
import distanceconversion.distance;
import timeconversion.timer;
public class converter
{
public static void main(String args[])
{
Scanner s=new Scanner(System.in);
int choice,ch;
currency c = new currency();
distance d=new distance();
timer t=new timer();
do
{
System.out.println("1.dollar to rupee ");
System.out.println("2.rupee to dollar ");
System.out.println("3.Euro to rupee ");
System.out.println("4..rupee to Euro ");
System.out.println("5.Yen to rupee ");
System.out.println("6.Rupee to Yen ");
System.out.println("7.Meter to kilometer ");
System.out.println("8.kilometer to meter ");
System.out.println("9.Miles  to kilometer ");
System.out.println("10.kilometer to miles");
System.out.println("11.Hours to Minutes");
System.out.println("12.Hours to Seconds");
System.out.println("13.Seconds to Hours");
System.out.println("14.Minutes to Hours");
System.out.println("Enter ur choice");
choice=s.nextInt();
switch(choice)
{
case 1:
{
c.dollartorupee();
break;
}
case 2:
{
c.rupeetodollar();
break;
}
case 3:
{
c.eurotorupee();
break;
}
case 4:
{
c.rupeetoeuro();
break;
}
case 5:
{c.yentorupee();
break;}
case 6 :
{
c.rupeetoyen();
break;
}
case 7  :
{
d.mtokm();
break;
}
case 8  :
{
d.kmtom();
break;
}
case 9  :
{
d.milestokm();
break;
}
case 10  :
{
d.kmtomiles();
break;
}
case 11 :
{
t.hourstominutes();
break;
}
case 12 :
{
t.hourstoseconds();
break;
}
case 13 :
{
t.secondstohours();
break;
}
case 14 :
{
t.minutestohours();
break;
}}
System.out.println("Enter 0 to  quit and 1 to continue ");
ch=s.nextInt();
}while(ch==1);
}
}
<br>
</text>

<h1>7c.Distance</h1>
<text>package distanceconversion;
import java.util.*;
public class distance
{
double km,m,miles;
Scanner sc = new Scanner(System.in);
public void kmtom()
{
System.out.print("Enter in km ");
km=sc.nextDouble();
m=(km*1000);
System.out.println(km+"km" +"equal to"+m+"metres");
}
public void mtokm()
{
System.out.print("Enter in meter ");
m=sc.nextDouble();
km=(m/1000);
System.out.println(m+"m" +"equal to"+km+"kilometres");
}
public void milestokm()
{ 
System.out.print("Enter in miles");
miles=sc.nextDouble();
km=(miles*1.60934);
System.out.println(miles+"miles" +"equal to"+km+"kilometres");
}
public void kmtomiles()
{
System.out.print("Enter in km");
km=sc.nextDouble();
miles=(km*0.621371);
System.out.println(km+"km" +"equal to"+miles+"miles");
}
}
<br>
</text>

<h1>7d.Timer</h1>
<text>package timeconversion;
import java.util.*;
public class timer
{
int hours,seconds,minutes;
int input;
Scanner sc = new Scanner(System.in);
public void secondstohours()
{
System.out.print("Enter the number of seconds: ");
input = sc.nextInt();
hours = input / 3600;
minutes = (input % 3600) / 60;
seconds = (input % 3600) % 60;
System.out.println("Hours: " + hours);
System.out.println("Minutes: " + minutes);
System.out.println("Seconds: " + seconds);
}
public void minutestohours()
{
System.out.print("Enter the number of minutes: ");
minutes=sc.nextInt();
hours=minutes/60;
minutes=minutes%60;
System.out.println("Hours: " + hours);
System.out.println("Minutes: " + minutes);
}
public void hourstominutes()
{ 
System.out.println("enter the no of hours");
hours=sc.nextInt();
minutes=(hours*60);
System.out.println("Minutes: " + minutes);
}
public void hourstoseconds()
{ 
System.out.println("enter the no of hours");
hours=sc.nextInt();
seconds=(hours*3600);
System.out.println("Minutes: " + seconds);
}
}
<br>
</text>

<h1>8a.Number</h1>
<text>import java.util.Random;
class Number extends Thread
{
 public void run()
 {
 Random random = new Random();
 for(int i =0; i<10; i++)
 {
 int randomInteger = random.nextInt(100);
 System.out.println("Random Integer generated : " + randomInteger);
 Square s = new Square(randomInteger);
 s.start();
 Cube c = new Cube(randomInteger);
 c.start();
/* try 
{
 Thread.sleep(1000);

 } 
catch (InterruptedException ex) 
{
 System.out.println(ex);
}*/
 }
 }
}
<br>
</text>

<h1>8b.Square</h1>
<text>import java.util.Random;
class Square extends Thread
{
 int x;
 Square(int n)
 {
 x = n;
 }
 public void run()
 {
 int sqr = x * x;
 System.out.println("Square of " + x + " = " + sqr );
 }
}
<br>
</text>

<h1>8c.Cube</h1>
<text>import java.util.Random;
class Cube extends Thread
{
 int x;
 Cube(int n)
 {
 x = n;
 }
 public void run()
 {
 int cub = x * x * x;
 System.out.println("Cube of " + x + " = " + cub );
 }
}
<br>
</text>

<h1>8d.Lab8</h1>
<text>import java.util.Random;
class Cube extends Thread
{
 int x;
 Cube(int n)
 {
 x = n;
 }
 public void run()
 {
 int cub = x * x * x;
 System.out.println("Cube of " + x + " = " + cub );
 }
}
<br>
</text>

<h1>9a.Div</h1>
<text>import java.util.Scanner;
class division
{
public static void main(String[] args)
{
int a,b,result;
Scanner input =new Scanner(System.in);
System.out.println("Input two integers");
a=input.nextInt();
b=input.nextInt();
try
{
result=a/b;
System.out.println("Result="+result);
}
catch(ArithmeticException e)
{
System.out.println("exception caught: Divide by zero error"+e);
}
}
}
<br>
</text>

<h1>9b.Div2</h1>
<text>class Divide2
{
public static void main(String[] arr)
{
try
{
if(arr.length<2)
throw(new Exception("two argument must be provided"));
int a= Integer.parseInt(arr[0]);
int b=Integer.parseInt(arr[1]);
if(b==0)
throw(new Exception("second argument should be non zero"));
int c=a/b;
System.out.println("result:"+c);
}
catch(Exception e)
{
System.out.println(e);
}
}}
<br>
</text>

<h1>10.Array</h1>
<text>
import java.util.*;
import java.io.*;
public class arraylistexample
{
public static void main(String args[])throws IOException
{   
ArrayList<String> obj = new ArrayList<String>();
Scanner in = new Scanner(System.in);
//DataInputStream in=new DataInputStream(System.in);
int c,ch;
int i,j;
String str,str1; 
do
{
System.out.println("STRING MANIPULATION");
System.out.println("**********");
System.out.println(" 1. Append at end \t 2.Insert at particular index \t 3.Search \t");
System.out.println( "4.List string that starting with letter \t");
System.out.println("5.Size \t 6.Remove \t 7.Sort\t 8.Display\t" );
System.out.println("Enter the choice ");
c=Integer.parseInt(in.next());
 switch(c)
 {      
 case 1:
 {
 System.out.println("Enter the string ");
 str=in.next();
 obj.add(str);
 break;
 }
case 2:
{
System.out.println("Enter the string ");
str=in.next();
System.out.println("Specify the index/position to insert");
i=Integer.parseInt(in.next());
obj.add(i-1,str);
System.out.println("The array list has following elements:"+obj);
break;
}
case 3:
{
System.out.println("Enter the string to search ");
str=in.next();
j=obj.indexOf(str);
if(j==-1)
System.out.println("Element not found");
else
System.out.println("Index of:"+str+"is"+j);
break;
}
case 4:
{
System.out.println("Enter the character to List string that starts with specified character");
str=in.next();
for(i=0;i<(obj.size()-1);i++)
{
str1=obj.get(i);
if(str1.startsWith(str))
{
System.out.println(str1);
}
}       
break;
}
case 5:
{
System.out.println("Size of the list "+obj.size());
break;
}       
case 6:
{
System.out.println("Enter the element to remove");
str=in.next();
if(obj.remove(str))
{
System.out.println("Element Removed"+str);
}
else
{
 System.out.println("Element not present");
} 
 break;
}
 case 7:
{
Collections.sort(obj);
System.out.println("The array list has following elements:"+obj);
break;
}
case 8:
{
 System.out.println("The array list has following elements:"+obj);
 break;
}       
}
 System.out.println("enter 0 to break and 1 to continue");
 ch=Integer.parseInt(in.next());
}while(ch==1);
}
}
<br>
</text>